class YadomsComponentChart{constructor(){}propsKeys(){return[]}render(t){return`\n      <div class="chart" data-chart="${btoa(JSON.stringify(t.datas))}"></div>\n    `}style(){return"\n      .chart .ct-label,\n      .chart .ct-axis-title {\n        fill: var(--primaryColor);\n        color: var(--primaryColor);\n      }\n      \n      .chart .ct-grid {\n        stroke: var(--primaryColor);\n      }\n\n      .chartist-tooltip {\n        z-index: 999999;\n      }\n    "}init(t){Yadoms.loader("/components/lib/chartist/chartist.css","/components/lib/chartist/chartist.min.js").then((function(){Yadoms.loader("/components/lib/chartist/chartist-plugin-tooltip.css","/components/lib/chartist/chartist-plugin-axistitle.min.js","/components/lib/chartist/chartist-plugin-tooltip.min.js").then(()=>{let s=t.querySelector(".chart"),i=JSON.parse(atob(s.dataset.chart)),a={labels:[],series:[]};i.forEach(t=>{let s=[];t.data.forEach(t=>{a.labels.push(t.date),s.push(t.value)}),a.series.push(s)}),new Chartist.Line(s,a,{width:"100%",showPoint:!0,low:0,showArea:!0,plugins:[Chartist.plugins.tooltip(),Chartist.plugins.ctAxisTitle({axisX:{axisTitle:"Time (mins)",axisClass:"ct-axis-title",offset:{x:0,y:32},textAnchor:"middle"},axisY:{axisTitle:i.unit,axisClass:"ct-axis-title",offset:{x:0,y:-1},flipTitle:!1}})]})})}))}update(t,s,i){}getProperty(t,s){}}export{YadomsComponentChart as YadomsComponent};