class YadomsComponentDimmer{constructor(){}propsKeys(){return["value","min","max","step","unit","digital"]}render(n){return`\n      <div class="dimmer joliePosition">\n        <div class="wrapper shadow-inner">\n          <button class="shadow-inner" data-action="decrement">\n            <i class="fas fa-minus"></i>\n          </button>\n          <div class="inner-wrapper shadow-inner">\n            <input class="${n.digital?"font-mono":""}" \n                   type="number" \n                   value="${n.value}" \n                   min="${n.min}" \n                   max="${n.max}" \n                   step="${n.step}" />\n            <div class="suffix">\n              <div>${n.unit}</div>\n            </div>\n          </div>\n          <button class="shadow-inner" data-action="increment">\n            <i class="fas fa-plus"></i>\n          </button>\n        </div>\n      </div>\n    `}style(){return"\n      .dimmer {\n        padding: 0 2rem;\n      }\n\n      .dimmer .wrapper {\n        width: 100%;\n        height: 2.5rem;\n        display: flex;\n        flex-direction: row;\n        border-radius: 0.5rem;\n        margin-top: 0.5rem;\n        overflow: hidden ;\n        color: var(--highlightColor);\n        background-color: var(--activeColor);\n      }\n\n      .dimmer .wrapper button {\n        padding: 0.5rem;\n        height: 100%;\n        width: 2.5rem;\n        font-weight: bold;\n        font-size: 1.125rem;\n        background-color: var(--activeColor);\n        color: var(--highlightColor);\n      }\n\n      .dimmer .wrapper button:hover {\n        background-color: var(--highlightColor);\n        color: var(--activeColor);\n      }\n\n      .dimmer .wrapper .inner-wrapper {\n        position: relative;\n        height: 100%;\n        padding: 0.5rem 1rem;\n        flex-grow: 1;\n        font-weight: bold;\n      }\n\n      .dimmer .wrapper .inner-wrapper input {\n        text-align: right;\n        height: 100%;\n        width: 100%;\n        padding-right: 1rem;\n        background-color: var(--activeColor);\n        color: var(--highlightColor);\n        font-size: 1.125rem;\n      }\n\n      .dimmer .wrapper .inner-wrapper .suffix {\n        position: absolute;\n        top: 0;\n        right: 0;\n        height: 100%;\n        flex-direction: column;\n        display: flex;\n        align-items: center;\n      }\n\n      .dimmer .wrapper .inner-wrapper .suffix div {\n        font-size: 0.75rem;\n        padding-right: 0.5rem;\n      }\n\n    "}_decrement(n){const e=n.currentTarget.parentNode.querySelector("input"),r=Number(e.getAttribute("step")),t=Number(e.getAttribute("min"));let i=Number(e.value),o=i-r;o<t&&(o=i),e.value=o}_increment(n){const e=n.currentTarget.parentNode.querySelector("input"),r=Number(e.getAttribute("step")),t=Number(e.getAttribute("max"));let i=Number(e.value),o=i+r;o>t&&(o=i),e.value=o}init(n){n.querySelector('.dimmer button[data-action="increment"]').addEventListener("click",this._increment,!1),n.querySelector('.dimmer button[data-action="decrement"]').addEventListener("click",this._decrement,!1)}update(n,e,r){}getProperty(n,e){}}export{YadomsComponentDimmer as YadomsComponent};