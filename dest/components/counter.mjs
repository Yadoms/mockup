class YadomsComponentCounter{constructor(){}propsKeys(){return["value","unit"]}render(e){return`\n      <div class="counter joliePosition">\n        <div class="odometer" data-value="${e.value}" data-unit="${e.unit}">\n        </div>\n      </div>\n    `}style(){return"\n      .counter .odometer {\n        font-weight: bold;\n        font-size: 1.25rem;\n      }\n\n      .counter .odometer .odometer-hacking-mark ~ .odometer-digit {\n        background-image: linear-gradient(\n          to bottom,\n          #eee0d3 0%,\n          #eee0d3 40%,\n          #bbaa9a 60%,\n          #eee0d3 80%,\n          #eee0d3 100%\n        );\n        background-color: #fff5f5;\n        color: #c53030;\n      }\n\n      .counter .odometer .odometer-suffix-mark {\n        padding: 0 0.15rem;\n      }\n    "}_odometerHack(e){let t=e.querySelectorAll(".odometer-formatting-mark");if(t.length){t[t.length-1].classList.add("odometer-hacking-mark")}let o=document.createElement("span");o.className="odometer-formatting-mark odometer-suffix-mark text-lg",o.innerHTML=e.dataset.unit,e.querySelector(".odometer-inside").appendChild(o)}_transform(e){let t=e.querySelector(".odometer"),o=new Odometer({el:t,val:0,format:"(.ddd)",duration:1e3,minimumIntegerDigit:9}),n=this;t.addEventListener("odometerdone",e=>{n._odometerHack(e.currentTarget)}),o.update(t.dataset.value),this._odometerHack(t)}init(e){let t=this;Yadoms.loader("/components/lib/odometer/odometer.min.js","/components/lib/odometer/car.css").then((function(){t._transform(e)}))}update(e,t){}}export{YadomsComponentCounter as YadomsComponent};